// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE

import * as Basic from "./Basic.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Js_primitive from "bs-platform/lib/es6/js_primitive.js";
import * as Caml_builtin_exceptions from "bs-platform/lib/es6/caml_builtin_exceptions.js";

function awesome(children) {
  return /* record */[
          /* init */(function () {
              var onChange = /* record */[/* contents */(function () {
                    return /* () */0;
                  })];
              return /* WithState */[/* record */[
                        /* identity */awesome,
                        /* props */children,
                        /* state */"Folks",
                        /* render */(function (props, state) {
                            return /* Builtin */Block.__(1, [
                                      "div",
                                      { },
                                      /* :: */[
                                        /* Builtin */Block.__(1, [
                                            "div",
                                            {
                                              onclick: (function () {
                                                  return Curry._1(onChange[0], state + "1");
                                                })
                                            },
                                            /* :: */[
                                              /* String */Block.__(0, [state]),
                                              /* [] */0
                                            ]
                                          ]),
                                        props
                                      ]
                                    ]);
                          }),
                        /* onChange */(function (handler) {
                            onChange[0] = handler;
                            return /* () */0;
                          })
                      ]];
            }),
          /* clone */(function (param) {
              var contents = param[0];
              if (contents[/* identity */0] === awesome) {
                return /* WithState */[/* record */[
                          /* identity */contents[/* identity */0],
                          /* props */children,
                          /* state */contents[/* state */2],
                          /* render */contents[/* render */3],
                          /* onChange */contents[/* onChange */4]
                        ]];
              }
              
            })
        ];
}

var first_001 = {
  id: "awesome"
};

var first_002 = /* :: */[
  /* String */Block.__(0, ["Hello"]),
  /* :: */[
    /* Custom */Block.__(2, [awesome(/* :: */[
              /* String */Block.__(0, [">>"]),
              /* :: */[
                /* Custom */Block.__(2, [awesome(/* [] */0)]),
                /* [] */0
              ]
            ])]),
    /* :: */[
      /* Builtin */Block.__(1, [
          "div",
          {
            id: "Inner",
            onclick: (function (evt) {
                console.log("Clicked!", evt);
                return /* () */0;
              })
          },
          /* :: */[
            /* String */Block.__(0, ["world"]),
            /* [] */0
          ]
        ]),
      /* [] */0
    ]
  ]
];

var first = /* Builtin */Block.__(1, [
    "div",
    first_001,
    first_002
  ]);

var match = document.getElementById("root");

if (match !== undefined) {
  Basic.mount(first, Js_primitive.valFromOption(match));
} else {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "App.re",
          52,
          12
        ]
      ];
}

export {
  awesome ,
  first ,
  
}
/* first Not a pure module */
