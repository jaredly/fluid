// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Fluid from "./Fluid.js";
import * as Js_primitive from "bs-platform/lib/es6/js_primitive.js";
import * as Caml_builtin_exceptions from "bs-platform/lib/es6/caml_builtin_exceptions.js";

function props(value, toString, _) {
  return /* tuple */[
          value,
          toString
        ];
}

function maker_000() {
  return "Folks";
}

function maker_003(param, state, setState) {
  return /* Builtin */Block.__(1, [
            "div",
            { },
            /* :: */[
              /* Builtin */Block.__(1, [
                  "div",
                  {
                    onclick: (function () {
                        return Curry._1(setState, state + "1");
                      })
                  },
                  /* :: */[
                    /* String */Block.__(0, ["Awesome " + Curry._1(param[1], param[0])]),
                    /* [] */0
                  ]
                ]),
              /* [] */0
            ]
          ]);
}

var maker = /* record */[
  maker_000,
  /* newStateForProps */undefined,
  /* reconcileTrees */undefined,
  maker_003
];

function make(props) {
  return Fluid.Maker[/* makeComponent */0](maker, props);
}

var Awesome = /* module */[
  /* props */props,
  /* maker */maker,
  /* make */make
];

function props_001(prim) {
  return String(prim);
}

var props$1 = /* tuple */[
  5,
  props_001
];

function props_001$1(x) {
  return x;
}

var props$2 = /* tuple */[
  "Hi",
  props_001$1
];

var first_001 = {
  id: "awesome"
};

var first_002 = /* :: */[
  /* String */Block.__(0, ["Hello"]),
  /* :: */[
    /* Builtin */Block.__(1, [
        "div",
        {
          id: "here"
        },
        /* :: */[
          /* Builtin */Block.__(1, [
              "div",
              { },
              /* :: */[
                /* String */Block.__(0, ["What"]),
                /* [] */0
              ]
            ]),
          /* [] */0
        ]
      ]),
    /* :: */[
      /* Custom */Block.__(2, [Fluid.Maker[/* makeComponent */0](maker, props$1)]),
      /* :: */[
        /* Custom */Block.__(2, [Fluid.Maker[/* makeComponent */0](maker, props$2)]),
        /* :: */[
          /* Builtin */Block.__(1, [
              "div",
              {
                id: "Inner"
              },
              /* :: */[
                /* String */Block.__(0, ["world"]),
                /* [] */0
              ]
            ]),
          /* [] */0
        ]
      ]
    ]
  ]
];

var first = /* Builtin */Block.__(1, [
    "div",
    first_001,
    first_002
  ]);

var match = document.getElementById("root");

if (match !== undefined) {
  Fluid.mount(first, Js_primitive.valFromOption(match));
} else {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "App.re",
          39,
          12
        ]
      ];
}

export {
  Awesome ,
  first ,
  
}
/* first Not a pure module */
