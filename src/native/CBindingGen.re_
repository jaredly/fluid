
type nativeNode;

[@external]
let updateNSButton = (~button: nativeNode, ~title: string, ~onPress: unit => unit) => {|
  NSButton* button_v = (NSButton*)button;
  NSString *title_v = [NSString stringWithUTF8String:String_val (title)];
  MLButtonDelegate* delegate = [[MLButtonDelegate alloc] initWithOnPress:onPress_v];
|};

[@external]
let createNSView = (
  onPress: unit => unit,
  (x, y): (float, float),
  (width, height): (float, float),
  style: viewStyle
) => {|
  Record1(style, backgroundColor);
  Check_optional(backgroundColor);
  if (backgroundColor_isPresent) {
    Double_record4(backgroundColor_contents, r, g, b, a);
  }
|};






let startApp = (~title: string, ~size: (float, float), ~callback: 'node => unit) => {
  let (width, height) = size;
  let title = [%NSString title];
  [@autoreleasepool] {
    NSWindow.initWithContentRect(
      _NSMakeRect(0, 0, width, height),
      ~styleMask: (
        _NSWindowStyleMaskClosable
      )
    )
  }
};
