// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bsb-native/lib/js/block.js");
var Curry = require("bsb-native/lib/js/curry.js");
var Layout = require("../Layout.js");
var Animate = require("./Animate.js");
var FluidDom = require("./FluidDom.js");
var Pervasives = require("bsb-native/lib/js/pervasives.js");
var Js_primitive = require("bsb-native/lib/js/js_primitive.js");
var Caml_builtin_exceptions = require("bsb-native/lib/js/caml_builtin_exceptions.js");

var Style = /* module */[];

function translate(node, dx, offset) {
  return Animate.spring(1, 10, undefined, (function (amount) {
                node.style.transform = "translateX(" + (Pervasives.string_of_float((1 - amount) * dx + offset) + "px)");
                return /* () */0;
              }), (function (param) {
                return /* () */0;
              }));
}

function fade(node, out) {
  return Animate.spring(1, 10, undefined, (function (amount) {
                node.style.opacity = out ? amount : 1 - amount;
                return /* () */0;
              }), (function (param) {
                if (out) {
                  node.parentNode.removeChild(node);
                  return /* () */0;
                } else {
                  return 0;
                }
              }));
}

function toggle(on, off, hooks) {
  var match = Curry._2(FluidDom.Fluid[/* Hooks */14][/* useState */1], false, hooks);
  var match$1 = match[0];
  var setOn = match$1[1];
  var isOn = match$1[0];
  Curry._3(FluidDom.Fluid[/* Hooks */14][/* useReconciler */0], isOn, (function (oldState, newState, mountedTree, newTree) {
          console.log("reconciling I guess", oldState, newState);
          var exit = 0;
          if (oldState) {
            if (newState) {
              return mountedTree;
            } else {
              exit = 1;
            }
          } else if (newState) {
            exit = 1;
          } else {
            return mountedTree;
          }
          if (exit === 1) {
            var nativeNode = Curry._1(FluidDom.Fluid[/* getNativeNode */4], mountedTree);
            var newTree$1 = Curry._1(FluidDom.Fluid[/* inflateTree */9], Curry._1(FluidDom.Fluid[/* instantiateTree */7], newTree));
            var newNativeNode = Curry._1(FluidDom.Fluid[/* getNativeNode */4], newTree$1);
            translate(nativeNode, newState ? -30 : 30, 0);
            fade(nativeNode, true);
            translate(newNativeNode, newState ? -30 : 30, newState ? 30 : -30);
            fade(newNativeNode, false);
            nativeNode.parentNode.insertBefore(newNativeNode, nativeNode);
            return newTree$1;
          }
          
        }), match[1]);
  console.log("Is On", isOn);
  if (isOn) {
    return Curry._1(on, (function (param) {
                  return Curry._1(setOn, false);
                }));
  } else {
    return Curry._1(off, (function (param) {
                  return Curry._1(setOn, true);
                }));
  }
}

function awesomeComponent(value, toString, hooks) {
  var match = Curry._2(FluidDom.Fluid[/* Hooks */14][/* useState */1], "Awesome", hooks);
  var match$1 = match[0];
  var setState = match$1[1];
  var state = match$1[0];
  return /* Builtin */Block.__(1, [
            Curry._7(FluidDom.Fluid[/* Native */15][/* div */0], undefined, undefined, undefined, undefined, undefined, undefined, /* () */0),
            /* :: */[
              /* Builtin */Block.__(1, [
                  Curry._7(FluidDom.Fluid[/* Native */15][/* div */0], undefined, undefined, undefined, undefined, (function (_evt) {
                          return Curry._1(setState, state + "1");
                        }), undefined, /* () */0),
                  /* :: */[
                    /* String */Block.__(0, ["Folkx " + (Curry._1(toString, value) + (" " + state))]),
                    /* [] */0
                  ],
                  undefined
                ]),
              /* [] */0
            ],
            undefined
          ]);
}

function button(text, style, onClick, hooks) {
  return /* Builtin */Block.__(1, [
            Curry._7(FluidDom.Fluid[/* Native */15][/* button */1], undefined, undefined, undefined, undefined, (function (_evt) {
                    return Curry._1(onClick, /* () */0);
                  }), style, /* () */0),
            /* :: */[
              /* String */Block.__(0, [text]),
              /* [] */0
            ],
            undefined
          ]);
}

var simple_000 = Curry._7(FluidDom.Fluid[/* Native */15][/* div */0], "awesome", undefined, undefined, undefined, undefined, undefined, /* () */0);

var simple_001 = /* :: */[
  /* String */Block.__(0, ["Hello"]),
  /* :: */[
    /* Builtin */Block.__(1, [
        Curry._7(FluidDom.Fluid[/* Native */15][/* div */0], "here", undefined, undefined, undefined, undefined, undefined, /* () */0),
        /* :: */[
          /* Builtin */Block.__(1, [
              Curry._7(FluidDom.Fluid[/* Native */15][/* div */0], undefined, undefined, undefined, undefined, undefined, undefined, /* () */0),
              /* :: */[
                /* String */Block.__(0, ["What"]),
                /* [] */0
              ],
              undefined
            ]),
          /* [] */0
        ],
        Layout.style(100, 50, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* () */0)
      ]),
    /* [] */0
  ]
];

var simple_002 = Layout.style(500, 500, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* () */0);

var simple = /* Builtin */Block.__(1, [
    simple_000,
    simple_001,
    simple_002
  ]);

var first_000 = Curry._7(FluidDom.Fluid[/* Native */15][/* div */0], "awesome", undefined, undefined, undefined, undefined, undefined, /* () */0);

var first_001 = /* :: */[
  /* String */Block.__(0, ["Hello"]),
  /* :: */[
    /* Builtin */Block.__(1, [
        Curry._7(FluidDom.Fluid[/* Native */15][/* div */0], "here", undefined, undefined, undefined, undefined, undefined, /* () */0),
        /* :: */[
          /* Builtin */Block.__(1, [
              Curry._7(FluidDom.Fluid[/* Native */15][/* div */0], undefined, undefined, undefined, undefined, undefined, undefined, /* () */0),
              /* :: */[
                /* String */Block.__(0, ["What"]),
                /* [] */0
              ],
              undefined
            ]),
          /* [] */0
        ],
        Layout.style(100, 50, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* () */0)
      ]),
    /* :: */[
      /* Custom */Block.__(2, [Curry._2(FluidDom.Fluid[/* Maker */2][/* makeComponent */0], toggle, (function (param) {
                  return toggle((function (onClick) {
                                return /* Builtin */Block.__(1, [
                                          Curry._7(FluidDom.Fluid[/* Native */15][/* div */0], undefined, undefined, undefined, undefined, undefined, undefined, /* () */0),
                                          /* :: */[
                                            /* String */Block.__(0, ["Click this to"]),
                                            /* :: */[
                                              /* Custom */Block.__(2, [Curry._2(FluidDom.Fluid[/* Maker */2][/* makeComponent */0], button, (function (param) {
                                                          return button("Turn Off", "background-color: #88ff88", onClick, param);
                                                        }))]),
                                              /* [] */0
                                            ]
                                          ],
                                          undefined
                                        ]);
                              }), (function (onClick) {
                                return /* Builtin */Block.__(1, [
                                          Curry._7(FluidDom.Fluid[/* Native */15][/* div */0], undefined, undefined, undefined, undefined, undefined, undefined, /* () */0),
                                          /* :: */[
                                            /* Custom */Block.__(2, [Curry._2(FluidDom.Fluid[/* Maker */2][/* makeComponent */0], button, (function (param) {
                                                        return button("Turn On", "background-color: #ffacf0", onClick, param);
                                                      }))]),
                                            /* :: */[
                                              /* String */Block.__(0, ["if you want"]),
                                              /* [] */0
                                            ]
                                          ],
                                          undefined
                                        ]);
                              }), param);
                }))]),
      /* :: */[
        /* Custom */Block.__(2, [Curry._2(FluidDom.Fluid[/* Maker */2][/* makeComponent */0], awesomeComponent, (function (param) {
                    return awesomeComponent(5, (function (prim) {
                                  return String(prim);
                                }), param);
                  }))]),
        /* :: */[
          /* Custom */Block.__(2, [Curry._2(FluidDom.Fluid[/* Maker */2][/* makeComponent */0], awesomeComponent, (function (param) {
                      return awesomeComponent("Hi", (function (x) {
                                    return x;
                                  }), param);
                    }))]),
          /* :: */[
            /* Builtin */Block.__(1, [
                Curry._7(FluidDom.Fluid[/* Native */15][/* div */0], "Inner", undefined, undefined, undefined, undefined, undefined, /* () */0),
                /* :: */[
                  /* String */Block.__(0, ["world"]),
                  /* [] */0
                ],
                undefined
              ]),
            /* [] */0
          ]
        ]
      ]
    ]
  ]
];

var first_002 = Layout.style(500, 500, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* () */0);

var first = /* Builtin */Block.__(1, [
    first_000,
    first_001,
    first_002
  ]);

var match = document.getElementById("root");

if (match !== undefined) {
  Curry._2(FluidDom.Fluid[/* mount */13], first, Js_primitive.valFromOption(match));
} else {
  throw [
        Caml_builtin_exceptions.assert_failure,
        /* tuple */[
          "App.re",
          148,
          12
        ]
      ];
}

exports.Style = Style;
exports.translate = translate;
exports.fade = fade;
exports.toggle = toggle;
exports.awesomeComponent = awesomeComponent;
exports.button = button;
exports.simple = simple;
exports.first = first;
/* simple Not a pure module */
